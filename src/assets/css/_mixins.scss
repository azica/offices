@mixin adaptive($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;

    @if $type==1 {
        #{$property}: $startSize + px;

        @media (max-width: #{$container-max-width + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$layer-min-width + px}) / #{$container-max-width -
 $layer-min-width
                }));
    }
}

@else if $type==2 {
    #{$property}: $startSize + px;

    @media (min-width: #{$container-max-width + px}) {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$layer-min-width + px}) / #{$layer-max-width -
 $layer-min-width
            }));
}
}

@else {
    #{$property}: calc(#{$minSize +
 px
    }

    + #{$addSize} * ((100vw - #{$layer-min-width + px}) / #{$layer-max-width -
 $layer-min-width
    }));
}
}

@mixin adaptive-range($property,
    $startSize,
    $minSize,
    $maxWidth,
    $minWidth,
    $freeze: true) {
    $addSize: $startSize - $minSize;
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidth - $minWidth}));

    @if $freeze ==true {
        @media (max-width: #{$minWidth + px}) {
            #{$property}: #{$minSize + px};
        }
    }
}

@mixin text-rows($rows, $height) {
    display: -webkit-box;
    max-height: $height;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $rows;
    line-height: calc(#{$height} / #{$rows});
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin truncate($truncation-boundary: 100%) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin bgShadow3Radius($bg: $white, $radius: 12px) {
    background: $bg;
    border-radius: $radius;
    box-shadow:
        0px 2px 8px 0px,
        0px 0px 14px 0px rgba($shadowDark, 0.04);
}

@mixin bgShadow1Radius($bg: $white, $radius: 12px) {
    background: $bg;
    border-radius: $radius;
    box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.15);

}

@mixin bgShadowRadius($bg: $white, $radius: 12px) {
    background: $bg;
    border-radius: $radius;
    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.05), 0px 0px 14px 0px rgba(0, 0, 0, 0.04);
}

@mixin text16($color: $black) {
    color: $color;
    font-size: 1rem;
    font-family: $fontDefault;
    line-height: 136%;
}

@mixin text24($color: $black) {
    color: $color;
    font-size: 1.5rem;
    font-family: $fontDefault;
    line-height: 126%;
}

@mixin text14($color: $black) {
    color: $color;
    font-size: 0.875rem;
    font-family: $fontDefault;
    line-height: 130%;
}

@mixin text12($color: $black) {
    color: $color;
    font-size: 0.75rem;
    font-family: $fontDefault;
    line-height: 134%;
}

@mixin caps13($color: $black) {
    color: $color;
    font-size: 0.8125rem;
    font-family: $fontDefaultSemibold;
    line-height: 1.3rem;
    letter-spacing: 0.04063rem;
    text-transform: uppercase;
}

@mixin spinerColor($color) {
    border-color: $color transparent $color transparent;
}

@mixin scrollbar ($width: 7px,
    $height: 12px,
    $thumb-color: $Grey,
    $scrollbar-color: transparent,
    $thumb-hover-color: $MGrey) {
    &::-webkit-scrollbar {
        width: $width;
        height: $height;

        background-color: $scrollbar-color;
    }

    &::-webkit-scrollbar-thumb {
        background-color: $thumb-color;
        box-shadow: inset 1px 1px 10px $thumb-color;
        border-radius: 16px;
    }

    &::-webkit-scrollbar-thumb:hover {
        background-color: $thumb-hover-color;
    }

}


@mixin fade-animation {
    animation: show 0.4s ease-in-out;

    @keyframes show {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }
}